/*--------PART-I FUNCTIONS-------*/

/* #REFERENCE: AHMET EMÝN KALPAN HW 7 SOLUTIONS */

int find_size(const char* string)
{
	int result;
	if(string[0]=='\0')
		result=0;
	else
		result=1+find_size(&string[1]);
	return result;
}

int char_number(const char* string,const char* wish_to_find)
{
	int result;
	int size_string=find_size(string);
	int size_wish_to_find=find_size(wish_to_find);	

	if(size_wish_to_find > size_string)
		result=0;
	else
	{
		if(strncmp(string,wish_to_find,size_wish_to_find)==0)
			result=1+char_number(&string[1],wish_to_find);		


		else
			result=char_number(&string[1],wish_to_find);			
	}
	return result;
}

/*--------PART-II FUNCTIONS-------*/

/* #REFERENCE: BÜÞRA NUR ALTUNBAÞ HW 7 SOLUTIONS */

int combination(int n , int k)
{
    int comb;
    if (k==0 || k>=n)
        return 1;
    comb = combination(n-1, n-k) + combination(n-1, k);
    return  comb;
}

/* #REFERENCE: BARIÞ ÞENYERLÝ HW 7 SOLUTIONS */

int ways (int n)
{
    return ways_rec(n,0);
}

int ways_rec(int n, int k)
{   
    if(n < k)
        return 0;
    return ways_rec(n-1,k+1)+combination(n,k);
}

/*--------PART-III FUNCTIONS-------*/

/* #REFERENCE: BEKÝRCAN AÐAOÐLU HW 7 SOLUTIONS */

void read_table(FILE *input_file, grid_t table[][COL_SIZE])
{
	int i=0;
	while(fscanf(input_file, "%1d", &table[0][i]) != EOF)
	{
		i++;
		if(i == COL_SIZE)		
			read_table(input_file, &table[1]);	
	}
}

void print_path(char path[][COL_SIZE], int n)
{
	int i, j;	
	for(i = 0; i < n; i++)
	{	
		for(j=0; j < COL_SIZE; j++)
		{	
			if(j != 0)
				printf(" ");
			
			printf("%c", path[i][j]);
		}
	
		printf("\n");
	}
}

/* #REFERENCE: ÝLAYDA ZEYNEP ÖZDEMÝR HW 7 SOLUTIONS */

Bool find_path(Grid_t table[][COL_SIZE], char path[][COL_SIZE],int size, int location_x, int location_y)
{
    Bool res=FALSE;
    Grid_t where,where_y_x1,where_y1_x,where_y1_x1;
    if(location_y==(ROW_SIZE-1) && location_x==(COL_SIZE-1))/*y satir,x sutun*/
    {                                                       /*durma kosulu   */    
        path[ROW_SIZE-1][COL_SIZE-1]='*';
        res=TRUE;
    }
    else 
    {
        where=table[location_y][location_x];
        switch(where)
        {    
            case available: /*durum available ise*/
            {               
                path[location_y][location_x]='*';

                if(table[location_y][location_x+1] != notavailable)
                {
                    if(table[location_y][location_x+2] == notavailable &&
			table[location_y][location_x+1] == right_down)
                        	res=find_path(table,path,size,location_x+1,location_y);

                    else if (table[location_y][location_x+2] == notavailable && 				    (table[location_y][location_x+1] == available && 					     table[location_y+1][location_x+1]==notavailable))
                        	   res=find_path(table,path,size,location_x,location_y+1);

                    else
                        res=find_path(table,path,size,location_x+1,location_y);  
                }    
                else if(table[location_y+1][location_x] != notavailable)
                    res=find_path(table,path,size,location_x,location_y+1);
            }  
            break;  
            /*durum notavailable ise bu case'in islevi yok!Cunku sifir oldugu durumlarý ele almýyor*/
            case notavailable:  path[location_y][location_x]=' ';
		break;
            
            case right_down: /*durum right_down ise*/
            {
                path[location_y][location_x]='*';
                if(table[location_y+1][location_x+1] != notavailable )
                     res=find_path(table,path,size,location_x+1,location_y+1);
                else 
                {
                     if(table[location_y][location_x+1] != notavailable )
                        res=find_path(table,path,size,location_x+1,location_y);  
                     if(table[location_y+1][location_x] != notavailable )
                        res=find_path(table,path,size,location_x,location_y+1); 
               } 
            }
            break;
        }
    }
    return res;
}